version: '3.8'

services:
  ai-fitness-coach-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_API_URL: https://fit.kish.rs/api
        VITE_WEBSOCKET_URL: wss://fit.kish.rs/ws
    image: ai-fitness-coach-frontend:production
    container_name: ai-fitness-coach-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    environment:
      - NODE_ENV=production
      - VITE_APP_ENVIRONMENT=production
    networks:
      - ai-fitness-network
    depends_on:
      - ai-fitness-coach-backend

  ai-fitness-coach-backend:
    image: ai-fitness-coach-backend:latest
    container_name: ai-fitness-coach-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/fitcoach_prod
      - SPRING_DATASOURCE_USERNAME=fitcoach_user
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./logs:/app/logs
    networks:
      - ai-fitness-network
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    container_name: ai-fitness-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=fitcoach_prod
      - POSTGRES_USER=fitcoach_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ai-fitness-network

  redis:
    image: redis:7-alpine
    container_name: ai-fitness-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - ai-fitness-network

networks:
  ai-fitness-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
