name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allow manual triggering

env:
  DOCKER_IMAGE: sreeramkumbham/fitness-assistant-frontend
  DOCKER_PLATFORM: linux/amd64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Extract version from tag
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "tag=${VERSION}" >> $GITHUB_OUTPUT
          else
            VERSION=$(date +'%Y%m%d-%H%M%S')
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ env.DOCKER_PLATFORM }}
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.tag }}
            ${{ env.DOCKER_IMAGE }}:latest
          build-args: |
            VITE_API_URL=https://fit.kish.rs/api
            VITE_WEBSOCKET_URL=wss://fit.kish.rs/ws
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## ðŸš€ Fitness Coach Frontend ${{ steps.version.outputs.version }}
            
            ### Docker Image
            - **Image**: `${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}`
            - **Platform**: ${{ env.DOCKER_PLATFORM }}
            
            ### Deployment
            ```bash
            # Pull the new image
            docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
            
            # Update your container
            docker stop fa-f
            docker rm fa-f
            docker run -d -p 8080:80 --name fa-f ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
            sudo systemctl reload nginx
            ```
          draft: false
          prerelease: false 